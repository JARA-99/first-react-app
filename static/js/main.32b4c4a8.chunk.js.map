{"version":3,"sources":["components/Container.js","components/TaskCreator.js","components/TaskRow.js","components/TaskTable.js","components/VisibilityControl.js","App.js","index.js"],"names":["Container","_ref","children","react_default","a","createElement","className","TaskCreator","createNewTask","_useState","useState","_useState2","Object","slicedToArray","newTaskName","setNewTaskName","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","TaskRow","task","toggleTask","name","checked","done","TaskTable","doneValue","tasks","_ref$showCompleted","showCompleted","filter","map","components_TaskRow","key","VisibilityControl","isChecked","setShowCompleted","cleanTask","onClick","window","confirm","App","tasksItems","setTasksItems","_useState3","_useState4","t","objectSpread","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","components_Container","components_TaskCreator","taskName","find","concat","toConsumableArray","components_TaskTable","components_VisibilityControl","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.32b4c4a8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <div className=\"container p-4 \">\r\n      <div className=\"col-md-4 offset-md-4\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction TaskCreator({ createNewTask }) {\r\n  const [newTaskName, setNewTaskName] = useState(\"\");\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    createNewTask(newTaskName);\r\n    setNewTaskName(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"my-2 row\">\r\n      <div className=\"col-9\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter a new task\"\r\n          value={newTaskName}\r\n          onChange={e => setNewTaskName(e.target.value)}\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-3\">\r\n        <button className=\"btn btn-primary btn-sm\">Save Task</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TaskCreator;\r\n","import React from \"react\";\r\n\r\nfunction TaskRow({ task, toggleTask }) {\r\n  return (\r\n    <tr>\r\n      <td\r\n        className=\"d-flex \r\n        justify-content-between \"\r\n      >\r\n        {task.name}\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={task.done}\r\n          onChange={() => toggleTask(task)}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TaskRow;\r\n","import React from \"react\";\r\n\r\nimport TaskRow from \"./TaskRow\";\r\n\r\nfunction TaskTable({ tasks, toggleTask, showCompleted = false }) {\r\n  function taskTableRows(doneValue) {\r\n    return tasks\r\n      .filter(task => task.done === doneValue)\r\n      .map(task => (\r\n        <TaskRow task={task} key={task.name} toggleTask={toggleTask} />\r\n      ));\r\n  }\r\n\r\n  return (\r\n    <table\r\n      className=\"\r\n      table \r\n      table-striped \r\n      table-dark \r\n      table-bordered \r\n      border-secondary\"\r\n    >\r\n      <thead className=\"table-primary\">\r\n        <tr>\r\n          <th>Tasks</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{taskTableRows(showCompleted)}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TaskTable;\r\n","import React from \"react\";\r\n\r\nfunction VisibilityControl({ isChecked, setShowCompleted, cleanTask }) {\r\n  function handleDelete() {\r\n    if (window.confirm(\"Are you sure you want to delete it?\")) {\r\n      cleanTask();\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className=\"\r\n      d-flex \r\n      justify-content-between \r\n      bg-secondary \r\n      text-white \r\n      text-center\r\n      p-2\r\n      border-secondary\r\n      \"\r\n    >\r\n      <div className=\"form-check form-switch\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          checked={isChecked}\r\n          onChange={e => setShowCompleted(e.target.checked)}\r\n        />{\" \"}\r\n        <label>Show Tasks Done</label>\r\n      </div>\r\n      <button className=\"btn btn-danger btn-sm\" onClick={handleDelete}>\r\n        Clear\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VisibilityControl;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Container from \"./components/Container\";\nimport TaskCreator from \"./components/TaskCreator\";\nimport TaskTable from \"./components/TaskTable\";\nimport VisibilityControl from \"./components/VisibilityControl\";\n\nfunction App() {\n  const [tasksItems, setTasksItems] = useState([]);\n  const [showCompleted, setShowCompleted] = useState(false);\n\n  function createNewTask(taskName) {\n    if (!tasksItems.find(task => task.name === taskName)) {\n      setTasksItems([...tasksItems, { name: taskName, done: false }]);\n    }\n  }\n\n  function toggleTask(task) {\n    setTasksItems(\n      tasksItems.map(t => (t.name === task.name ? { ...t, done: !t.done } : t))\n    );\n  }\n\n  function cleanTask() {\n    setTasksItems(tasksItems.filter(task => !task.done));\n    setShowCompleted(false);\n  }\n\n  useEffect(() => {\n    let data = localStorage.getItem(\"tasks\");\n\n    if (data) {\n      setTasksItems(JSON.parse(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasksItems));\n  }, [tasksItems]);\n\n  return (\n    <main className=\"bg-dark vh-100 text-white\">\n      <Container>\n        <TaskCreator createNewTask={createNewTask} />\n        <TaskTable tasks={tasksItems} toggleTask={toggleTask} />\n        <VisibilityControl\n          isChecked={showCompleted}\n          setShowCompleted={checked => setShowCompleted(checked)}\n          cleanTask={cleanTask}\n        />\n\n        {showCompleted === true && (\n          <TaskTable\n            tasks={tasksItems}\n            toggleTask={toggleTask}\n            showCompleted={showCompleted}\n          />\n        )}\n      </Container>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}